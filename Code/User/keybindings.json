// Place your key bindings in this file to override the defaultsauto[]
// install extension 0 "multi-command" by ryuta46
// available contexts - https://code.visualstudio.com/api/references/when-clause-contexts#available-context-keys
[
	// when in editor - "delete" - deletes a line
	{
		"key": "delete",
		"command": "editor.action.deleteLines",
		"when": "textInputFocus && !editorReadonly"
	},
	// search files by name
	{
		"key": "insert",
		"command": "workbench.action.quickOpen"
	},
	// command palette
	{
		"key": "ctrl+insert",
		"command": "workbench.action.showCommands"
	},
	{
		"key": "ctrl+shift+p",
		"command": "-workbench.action.quickOpenNavigatePreviousInFilePicker",
		"when": "inFilesPicker && inQuickOpen"
	},
	// () => {} - snippet
	{
		"key": "numpad_add",
		"command": "editor.action.insertSnippet",
		"args": {
			"snippet": "() => {$1}$0"
		},
		"when": "textInputFocus && !editorReadonly"
	},

	// go to definition
	{
		"key": "f2",
		"command": "editor.action.revealDefinition",
		"when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
	},
	// go back from definiton
	{
		"key": "f3",
		"command": "runCommands",
		"when": "canNavigateBack",
		"args": {
			"commands": [
				// "workbench.action.closeActiveEditor",
				"workbench.action.navigateBack"
			]
		}
	},
	//rename
	{
		"key": "f1",
		"command": "editor.action.rename",
		"when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
	},
	{
		"key": "f1",
		"command": "renameFile",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	{
		"key": "r",
		"command": "renameFile",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	// collapse all folders
	// {
	// 	"key": "[",
	// 	"command": "workbench.files.action.collapseExplorerFolders",
	// 	"when": "sideBarFocus"
	// },
	// create new folder when sidebar is opened and focused
	{
		"key": "f",
		"command": "explorer.newFolder",
		"when": "filesExplorerFocus && !inputFocus"
	},
	// create new file when sidebar is opened and focused
	{
		"key": "n",
		"command": "explorer.newFile",
		"when": "filesExplorerFocus && !inputFocus"
	},
	{
		"key": "a",
		"command": "explorer.newFile",
		"when": "filesExplorerFocus && !inputFocus"
	},
	// create a new file while in the editor (you can specify the directory as well in the name: /src/test.js)
	{
		"key": "ctrl+n",
		"command": "runCommands",
		"when": "editorTextFocus",
		"args": {
			"commands": ["revealInExplorer", "explorer.newFile"]
		}
	},
	// undo when sidebar is opened and focused
	{
		"key": "u",
		"command": "undo",
		"when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
	},
	// delete file/folder when sidebar is opened and focused
	{
		"key": "d",
		"command": "moveFileToTrash",
		"when": "explorerResourceMoveableToTrash && filesExplorerFocus && foldersViewVisible && !explorerResourceReadonly && !inputFocus"
	},
	{
		"key": "delete",
		"command": "-explorer.moveFileToTrash",
		"when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
	},
	// toggle sidebar + focus sidebar , close sidebar + focus editor
	// {
	// 	"key": "f4",
	// 	"command": "runCommands",
	// 	"when": "editorTextFocus",
	// 	"args": {
	// 		"commands": [
	// 			"workbench.action.toggleSidebarVisibility",
	// 			"workbench.view.explorer",
	// 			"workbench.action.focusSideBar"
	// 		]
	// 	}
	// },
	// {
	// 	"key": "f4",
	// 	"command": "runCommands",
	// 	"when": "editorIsOpen && !editorTextFocus && !view.terminal.visible && !panelFocus",
	// 	"args": {
	// 		"commands": [
	// 			"workbench.action.focusActiveEditorGroup",
	// 			"workbench.action.toggleSidebarVisibility"
	// 		]
	// 	}
	// },
	{
		"key": "ctrl+e",
		"command": "runCommands",
		"when": "editorTextFocus && !sideBarVisible",
		"args": {
			"commands": [
				"workbench.action.toggleSidebarVisibility",
				"workbench.files.action.collapseExplorerFolders", //collapse all folders when opening file tree
				"revealInExplorer"
			]
		}
	},
	{
		"key": "ctrl+e",
		"command": "runCommands",
		"when": "sideBarFocus",
		"args": {
			"commands": [
				"workbench.action.focusActiveEditorGroup",
				"workbench.action.toggleSidebarVisibility"
			]
		}
	},
	{
		"key": "ctrl+e",
		"command": "workbench.action.toggleSidebarVisibility",
		"when": "editorTextFocus && sideBarVisible"
	},

	// navigate to next opened file
	{
		"key": "alt+right",
		"command": "workbench.action.nextEditor",
		"when": "!terminalFocus && !listFocus && !suggestWidgetVisible && !inQuickOpen && !inputBoxFocus"
	},
	{
		"key": "alt+l",
		"command": "workbench.action.nextEditor",
		"when": "!terminalFocus && !listFocus && !suggestWidgetVisible && !inQuickOpen && !inputBoxFocus"
	},
	// navigate to previous opened file
	{
		"key": "alt+left",
		"command": "workbench.action.previousEditor",
		"when": "!terminalFocus && !listFocus && !suggestWidgetVisible && !inQuickOpen && !inputBoxFocus"
	},
	{
		"key": "alt+left",
		"command": "runCommands",
		"when": "filesExplorerFocus",
		"args": {
			"commands": ["workbench.action.previousEditor"]
		}
	},
	{
		"key": "alt+right",
		"command": "runCommands",
		"when": "filesExplorerFocus",
		"args": {
			"commands": ["workbench.action.nextEditor"]
		}
	},
	//in VIM mode
	{
		"key": "ctrl+j",
		"command": "editor.action.insertCursorBelow",
		"when": "editorTextFocus && vim.active"
	},
	{
		"key": "ctrl+k",
		"command": "editor.action.insertCursorAbove",
		"when": "editorTextFocus && vim.active"
	},
	{
		"key": "alt+d",
		"command": "editor.action.addSelectionToNextFindMatch",
		"when": "editorTextFocus && vim.active"
	},
	{
		"key": "alt+h",
		"command": "workbench.action.previousEditor",
		"when": "!terminalFocus && !listFocus && !suggestWidgetVisible && !inQuickOpen && !inputBoxFocus"
	},
	// halfpage up
	{
		"key": "ctrl+up",
		"command": "extension.multiCommand.execute",
		"args": {
			"sequence": [
				{
					"command": "editorScroll",
					"args": {
						"to": "up",
						"by": "halfPage",
						"revealCursor": true,
						"value": 1 // page to scroll
					},
					"when": "editorTextFocus"
				},
				{
					"command": "cursorMove",
					"args": {
						"to": "viewPortCenter"
					}
				}
			]
		},
		"when": "editorTextFocus"
	},
	// halfpage down
	{
		"key": "ctrl+down",
		"command": "extension.multiCommand.execute",
		"args": {
			"sequence": [
				{
					"command": "editorScroll",
					"args": {
						"to": "down",
						"by": "halfPage",
						"revealCursor": true,
						"value": 1 // page to scroll
					},
					"when": "editorTextFocus"
				},
				{
					"command": "cursorMove",
					"args": {
						"to": "viewPortCenter"
					}
				}
			]
		},
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+r",
		"command": "editor.action.showHover"
	},
	{
		// close the file explorer when openin a file via "Enter"
		"key": "enter",
		"command": "runCommands",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsFolder && !inputFocus",
		"args": {
			"commands": [
				"explorer.openAndPassFocus",
				"workbench.action.focusActiveEditorGroup",
				"workbench.action.toggleSidebarVisibility"
			]
		}
	},
	// alt 1-3 focus 1-3 split editor screen
	{
		"key": "alt+1",
		"command": "workbench.action.focusFirstEditorGroup"
	},
	{
		"key": "alt+2",
		"command": "workbench.action.focusSecondEditorGroup"
	},

	// Commands below remove the default keybinds with this config.
	{
		"key": "ctrl+1",
		"command": "-workbench.action.focusFirstEditorGroup"
	},
	{
		"key": "ctrl+0",
		"command": "-workbench.action.focusSideBar"
	},
	{
		"key": "ctrl+q",
		"command": "-workbench.action.quit"
	},
	{
		"key": "ctrl+e",
		"command": "-workbench.action.quickOpen"
	},
	{
		"key": "ctrl+r",
		"command": "-workbench.action.openRecent"
	},
	{
		"key": "ctrl+alt+b",
		"command": "-workbench.action.toggleAuxiliaryBar"
	},
	{
		"key": "ctrl+b",
		"command": "-workbench.action.toggleSidebarVisibility"
	},
	{
		"key": "f5",
		"command": "-workbench.action.debug.start",
		"when": "debuggersAvailable && debugState == 'inactive'"
	},
	{
		"key": "ctrl+t",
		"command": "-workbench.action.showAllSymbols"
	},

	// custom

	{
		"key": "alt+q",
		"command": "cursorHome",
		"when": "editorTextFocus"
	},
	{
		"key": "alt+e",
		"command": "cursorEnd",
		"when": "editorTextFocus"
	},
	{
		"key": "alt+w",
		"command": "cursorMove",
		"args": {
			"to": "wrappedLineColumnCenter"
		}
	},
	{
		"key": "alt+f1",
		"command": "-editor.action.accessibilityHelp",
		"when": "!accessibilityHelpIsShown"
	},
	{
		"key": "alt+f2",
		"command": "-editor.action.accessibleView"
	},
	{
		"key": "shift+alt+f1",
		"command": "-editor.action.accessibilityHelp",
		"when": "!accessibilityHelpIsShown"
	},
	{
		"key": "shift+alt+f2",
		"command": "-editor.action.accessibleView"
	},
	{
		"key": "shift+alt+o",
		"command": "-editor.action.organizeImports",
		"when": "textInputFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)source\\.organizeImports\\b/"
	},
	{
		"key": "ctrl+alt+-",
		"command": "-workbench.action.navigateBack",
		"when": "canNavigateBack"
	},
	{
		"key": "ctrl+/",
		"command": "-editor.action.commentLine",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+/",
		"command": "editor.action.commentLine"
	},

	// BETA TEST
	// {
	// 	"key": "tab",
	// 	"command": "deleteWordRight",
	// 	"when": "editorTextFocus"
	// },
	// {
	// 	"key": "shift+tab",
	// 	"command": "deleteWordLeft",
	// 	"when": "editorTextFocus"
	// },
	// {
	// 	"key": "alt+w",
	// 	"command": "deleteInsideWord",
	// 	"when": "editorTextFocus"
	// },

	// TEST
	{
		"key": "alt+d",
		"command": "select",
		"when": "editorTextFocus"
	},
	// commands that might be helpful
	// editor.action.selectToBracket
	// {
	// 	"key": "alt+w",
	// 	"command": "editor.action.smartSelect.expand",
	// 	"when": "editorTextFocus"
	// },
	// expand or shrink selection
	{
		"key": "alt+i",
		"command": "editor.action.smartSelect.shrink",
		"when": "editorTextFocus"
	},
	{
		"key": "alt+o",
		"command": "editor.action.smartSelect.expand",
		"when": "editorTextFocus"
	},
	// open a link in browser with highlight
	{
		"key": "alt+g",
		"command": "gitlens.openFileInRemote",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+q",
		"command": "editor.action.scrollDownHover",
		"when": "editorTextFocus"
	},
	// Select next / previous search result
	{
		"key": "alt+n",
		"command": "search.action.focusNextSearchResult",
		"when": "hasSearchResult && searchViewletVisible"
	},
	{
		"key": "alt+p",
		"command": "search.action.focusPreviousSearchResult",
		"when": "hasSearchResult && searchViewletVisible"
	},

	// Select next / previous search when focus is on the editor
	{
		"key": "alt+n",
		"command": "editor.action.nextMatchFindAction",
		"when": "editorTextFocus && findWidgetVisible"
	},
	{
		"key": "alt+p",
		"command": "editor.action.previousMatchFindAction",
		"when": "editorTextFocus && findWidgetVisible"
	},
	{
		"key": "ctrl+enter",
		"command": "-github.copilot.generate",
		"when": "editorTextFocus && github.copilot.activated && !commentEditorFocused"
	}
]
