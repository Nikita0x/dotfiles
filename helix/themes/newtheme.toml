
# Attributes
"attribute" = { fg = "attribute" }
# "attribute" = { fg = "escapeCharacter" }

# Types
"type.builtin" = {fg = "type" }
"type.parameter" = {fg = "argument", modifiers = ["italic"] }
#1 
"type.enum" = {fg = "argument" }
"type.enum.variant" = {fg = "argument", modifiers = ["italic"] }

# Constructor
#2
# "constructor" = {fg = "argument", modifiers = ["italic"] }

# Constant
#3
# "constant.builtin.boolean" = {fg = "boolean" }
#4
# Escape characters
"constant.character.escape" = {fg = "escapeCharacter" }
# Numbers
"constant.numeric.integer" = {fg = "boolean" }
"constant.numeric.float" = {fg = "boolean" }

# Strings (regexp, path, url, symbol)
"string.regexp" = {fg = "regexp" }
# 5
"string" = {fg = "string" }
"string.special.path" = {fg = "string" }
"string.special.url" = {fg = "function" }
"string.special.symbol" = {fg = "string" }

# Comments
# 6
"comment" = {fg = "comment" }
"comment.line" = {fg = "blue" }
"comment.block" = {fg = "green" }
"comment.block.documentation" = {fg = "interface" }

# Variables
"variable.builtin" = {fg = "variableBuiltin" }
"variable.other" = {fg = "identifier" }
"variable.other.member" = {fg = "identifier" }
#7
"variable.other.private" = {fg = "function" }
# Function parameters/arguments
"variable.parameter" = {fg = "argument", modifiers = ["italic"] }

# CSS classes
"label" = {fg = "attribute" }

# Punctuation
"punctuation.delimiter" = {fg = "other" }
"punctuation.bracket" = {fg = "other" }
"punctuation.special" = {fg = "htmlTag" }

# Keyword
"keyword.control.conditional" = {fg = "keyword", modifiers = ["italic"] }
#8
"keyword.control.repeat" = {fg = "keyword", modifiers = ["italic"] }
#9 import works but export not?
"keyword.control.import" = {fg = "keyword", modifiers = ["italic"] }
"keyword.control.return" = {fg = "keyword", modifiers = ["italic"] }
"keyword.control.exception" = {fg = "keyword", modifiers = ["italic"] }
#10
"keyword.operator" = {fg = "test", modifiers = ["italic"] }

# Directives
# 11 - не уверен. Vue директивы не хайлатнулись. не понял на что оно влияет
"keyword.directive" = {fg = "test", modifiers = ["italic"] }
"keyword.function" = {fg = "keyword", modifiers = ["italic"] }
# 12
# Storage - Rust: enum, struct. TS: interface, enum, let, class ???
# "keyword.storage.type" = {fg = "red", modifiers = ["italic"] }
# 13
# Rust: mut, &ref, move. TS: const, static 
# "keyword.storage.modifier" = {fg = "red", modifiers = ["italic"] }

# Operators
# 14
# Rust: =, +=, etc.., 1.. range operator, ->, =>, ||, & too? 
# JS: все операторы, без разбора... Обычныые, а так же : =>, ++, --, ..., внутри регекспа так же
# # хотя не должны внутри регекспа ловится   
"operator" = { fg = "other"}

# Functions
"function.builtin" = { fg = "function", underline = { color = "function", style = "line" } }
"function.method" = { fg = "function", underline = { color = "function", style = "line" } }
"function.macro" = { fg = "function", underline = { color = "function", style = "line" } }
"function.special" = { fg = "function", underline = { color = "function", style = "line" } }

# Tags (HTML)
"tag" = { fg = "htmlTag"  }
"tag.builtin" = { fg = "htmlTag"  }

# Namespace
"namespace" = { fg = "namespace"  }

# Special - Rust: derive
"special" = { fg = "namespace"  }

# Markup

# UI
"ui.selection" = { fg = "red", bg = "green"}
"ui.background" = { bg = "background"}
"ui.bufferline.active" = { bg = "active" }
# "ui.bufferline.active" = { bg = "pitch_black" }
"ui.bufferline.background" = { bg = "background" }
# "ui.bufferline.background" = { bg = "pitch_black" }

[palette]
interface = "#53B20B"
background = "#1E1E1E"
other = "#676867"
keyword = "#9872A2"
function = "#D97706"
string = "#9AA83A"
identifier = "#ACDFFA"
type = "#4EC9B0"
attribute= "#D0B344"
boolean = "#408080"
htmlTag = "#569CD6"
selection = "#FF0000"
argument = "#078448"
escapeCharacter = "#8080FF"
regexp = "#D16969"
comment = "#525252"
variableBuiltin = "#C7444A"
test = "#0014FF"
active = "#540B0C"
pitch_black = "#000000"
namespace = "#e7c664"
