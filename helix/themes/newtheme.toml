
# Attributes
"attribute" = { fg = "attribute" }
# "attribute" = { fg = "escapeCharacter" }

# Types
"type.builtin" = {fg = "type" }
"type.parameter" = {fg = "argument", modifiers = ["italic"] }
#1 
"type.enum" = {fg = "argument" }
"type.enum.variant" = {fg = "argument", modifiers = ["italic"] }

# Constructor
#2
# "constructor" = {fg = "argument", modifiers = ["italic"] }

# Constant
#3
# "constant.builtin.boolean" = {fg = "boolean" }
#4
# Escape characters
"constant.character.escape" = {fg = "escapeCharacter" }
# Numbers
"constant.numeric.integer" = {fg = "boolean" }
"constant.numeric.float" = {fg = "boolean" }

# Strings (regexp, path, url, symbol)
"string.regexp" = {fg = "regexp" }
# 5
"string" = {fg = "string" }
"string.special.path" = {fg = "string" }
"string.special.url" = {fg = "function" }
"string.special.symbol" = {fg = "string" }

# Comments
# 6
"comment" = {fg = "comment" }
"comment.line" = {fg = "blue" }
"comment.block" = {fg = "green" }
"comment.block.documentation" = {fg = "interface" }

# Variables
"variable" = {fg = "identifier" }
"variable.builtin" = {fg = "variableBuiltin" }
"variable.other" = {fg = "identifier" }
"variable.other.member" = {fg = "identifier" }
#7
"variable.other.private" = {fg = "function" }
# Function parameters/arguments
"variable.parameter" = {fg = "argument", modifiers = ["italic"] }

# CSS classes
"label" = {fg = "attribute" }

# Punctuation
"punctuation.delimiter" = {fg = "other" }
"punctuation.bracket" = {fg = "other" }
"punctuation.special" = {fg = "other" }

# Keyword
"keyword" = {fg = "keyword"  }
"keyword.control.conditional" = {fg = "keyword"  }
#8
"keyword.control.repeat" = {fg = "keyword"  }
#9 import works but export not?
"keyword.control.import" = {fg = "keyword"  }
"keyword.control.return" = {fg = "keyword"  }
"keyword.control.exception" = {fg = "keyword"  }
#10
"keyword.operator" = {fg = "keyword"  }

# Directives
# 11 - не уверен. Vue директивы не хайлатнулись. не понял на что оно влияет
"keyword.directive" = {fg = "test"  }
"keyword.function" = {fg = "keyword"  }
# 12
# Storage - Rust: enum, struct. TS: interface, enum, let, class ???
# "keyword.storage.type" = {fg = "red", modifiers = ["italic"] }
# 13
# Rust: mut, &ref, move. TS: const, static 
# "keyword.storage.modifier" = {fg = "red", modifiers = ["italic"] }

# Operators
# 14
# Rust: =, +=, etc.., 1.. range operator, ->, =>, ||, & too? 
# JS: все операторы, без разбора... Обычныые, а так же : =>, ++, --, ..., внутри регекспа так же
# # хотя не должны внутри регекспа ловится   
"operator" = { fg = "other"}

# Functions
"function" = { fg = "function", underline = { color = "function", style = "" } }
"function.builtin" = { fg = "function", underline = { color = "function", style = "" } }
"function.method" = { fg = "function", underline = { color = "function", style = "" } }
"function.macro" = { fg = "function", underline = { color = "function", style = "" } }
"function.special" = { fg = "function", underline = { color = "function", style = "" } }

# Tags (HTML)
"tag" = { fg = "htmlTag"  }
"tag.builtin" = { fg = "htmlTag"  }

# Namespace
"namespace" = { fg = "namespace"  }

# Special - Rust: derive
"special" = { fg = "namespace"  }

# Markup

# Version control
"diff.plus.gutter" = { fg = "#487E02"  }
"diff.minus.gutter" = { fg = "red"  }
"diff.delta.gutter" = { fg = "sky_blue" }
# "diff.delta.moved" = { fg = "" }
# "diff.delta.conflict" = { fg = "" }

# Editor Interface (not working?)
# 15
# where is this used?
"markup.normal.completion" = { fg = "sky_blue" }
"markup.normal.hover" = { fg = "sky_blue" }
"markup.heading.completion" = { fg = "sky_blue" }
"markup.heading.hover" = { fg = "sky_blue" }
"raw.inline.completion" = { fg = "sky_blue" }
"raw.inline.hover" = { fg = "sky_blue" }

# UI
"ui.background" = { bg = "background"}
"ui.background.separator" = { bg = "test"} #wtf is this?

"ui.cursor" = { fg = "white",bg = "test"} 
#not sure how the ones below cusros should work
# "ui.cursor.normal" = { bg = "interface"} 
# "ui.cursor.insert" = { bg = "test"} 
# "ui.cursor.select" = { bg = "test"} 

"ui.cursor.match" = { fg = "test"} 
# "ui.cursor.primary" = { fg = "keyword"} 
# "ui.cursor.primary.normal" = { fg = "keyword"} 
# "ui.cursor.primary.insert" = { fg = "keyword"} 
# "ui.cursor.primary.select" = { fg = "keyword"} 
"ui.debug.breakpoint" = { fg = 'red' } 
# "ui.debug.active" = { fg = 'red' } 

#TBD
"ui.gutter" = { fg = 'comment' } 
"ui.gutter.selected" = { fg = 'white' } 
# "ui.statusline" = { bg = '#000000' } 
#TBD
"ui.statusline.inactive" = { fg = "white", bg = 'pitch_black' } 
# "ui.statusline.normal" = { fg = "white", bg = 'pitch_black' } 
"ui.statusline.insert" = { fg = "white", bg = 'rustic_red' } 
"ui.statusline.select" = { fg = "white", bg = 'pitch_black' } 
# "ui.statusline.separator" = { fg = "test", bg = "string" }

"ui.bufferline.active" = { bg = "rustic_red" }
"ui.bufferline.background" = { bg = "background" }

"ui.popup" = { bg = '#252525' } #when you try to pass an argument to a function
"ui.popup.info" = { fg = "white", bg = '#252525' } #which menu

"ui.picker.header" = { fg = "white", bg = '#252525' } #TBD - not sure where it applies
"ui.picker.header.column" = { fg = "white", bg = '#252525' } #TBD - not sure where it applies
"ui.picker.header.column.active" = { fg = "white", bg = '#252525' } #TBD - not sure where it applies

"ui.window" = { bg = "red"} #TBD borderlines separating splits
"ui.help" = { bg = "pitch_black"} #TBD #:command- info popup above it
"ui.text" = { fg = "white"} #TBD
"ui.text.focus" = { fg = "interface"} #TBD
"ui.text.info" = { fg = "interface"} # color of the text in which key
 
"ui.selection" = { bg = "selection"} #TBD
"ui.menu" = { bg = "selection"} #TBD
"ui.menu.selected" = { bg = "test"} #TBD
# "ui.selection.primary" = { bg = "test"} #TBD

"ui.menu.scroll" = { fg = "rustic_red", bg = "selection"} #TBD

# Diagnostics

"error" = {  fg = "red"} #TBD
"warning" = {  fg = "yellow"} #TBD

[palette]
interface = "#53B20B"
background = "#1E1E1E"
other = "#676867"
keyword = "#9872A2"
function = "#D97706"
string = "#9AA83A"
identifier = "#ACDFFA"
type = "#4EC9B0"
attribute= "#D0B344"
boolean = "#408080"
htmlTag = "#569CD6"
selection = "#000000" #170073 #pitch_black #450124
argument = "#078448"
escapeCharacter = "#8080FF"
regexp = "#D16969"
comment = "#525252"
variableBuiltin = "#C7444A"
red = "#F14C4C"
rustic_red = "#540B0C"
pitch_black = "#000000"
namespace = "#e7c664"
sky_blue = "#1B779A"
test = "#053AA6"
