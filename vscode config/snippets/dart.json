{
	// Place your snippets for dart here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

    
    
        "Freezed Model": {
    "prefix": "freezedmodel_with_imports",
    "body": [
      "import 'package:freezed_annotation/freezed_annotation.dart';",
      "part '${TM_FILENAME_BASE}.freezed.dart';",
      "part '${TM_FILENAME_BASE}.g.dart';",
      "",
      "@Freezed()",
      "class ${1:} with _$${1:} {",
      "  const factory ${1:}({",
      "    required String name,",
      "    @Default(18) int age,",
      "  }) = _${1:};",
      "",
      "  factory ${1:}.fromJson(Map<String, dynamic> json) =>",
      "      _$${1:}FromJson(json);",
      "}"
    ],
    "description": "Create a Freezed model with JSON serialization"
  },
  "Freezed Model Without Imports": {
    "prefix": "freezedmodel_without_imports",
    "body": [
      "@Freezed()",
      "class ${1:} with _$${1:} {",
      "  const factory ${1:}({",
      "    required String name,",
      "    @Default(18) int age,",
      "  }) = _${1:};",
      "",
      "  factory ${1:}.fromJson(Map<String, dynamic> json) =>",
      "      _$${1:}FromJson(json);",
      "}"
    ],
    "description": "Create a Freezed model with JSON serialization"
  }
      
      
}